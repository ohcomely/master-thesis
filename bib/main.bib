@article{lipton_generalized_1979,
  title    = {Generalized {Nested} {Dissection}},
  volume   = {16},
  issn     = {0036-1429},
  url      = {https://epubs.siam.org/doi/10.1137/0716027},
  doi      = {10.1137/0716027},
  abstract = {We make a precise recommendation for the choice of dissection sets for George’s [4] nested dissection on a square \$n {\textbackslash}times n\$ grid with n not a power of 2 and make some experimental comparisons with the direct use of the minimal degree algorithm of Markowitz [5]. Our results additionally indicate that the performance of the minimal degree algorithm can be significantly influenced by the way in which ties are broken. We also discuss the dissection of irregularly shaped regions and the extension of George’s ordering to three-dimensional regions.},
  number   = {2},
  urldate  = {2025-08-16},
  journal  = {SIAM Journal on Numerical Analysis},
  author   = {Lipton, Richard J. and Rose, Donald J. and Tarjan, Robert Endre},
  month    = apr,
  year     = {1979},
  note     = {Publisher: Society for Industrial and Applied Mathematics},
  pages    = {346--358},
  file     = {Full Text PDF:/home/ranjan/snap/zotero-snap/common/Zotero/storage/QHD8KQRW/Lipton et al. - 1979 - Generalized Nested Dissection.pdf:application/pdf}
}


@article{george_nested_1973,
  title    = {Nested {Dissection} of a {Regular} {Finite} {Element} {Mesh}},
  volume   = {10},
  issn     = {0036-1429},
  url      = {https://epubs.siam.org/doi/10.1137/0710032},
  doi      = {10.1137/0710032},
  abstract = {J. A. George has discovered a method, called nested dissection, for solving a system of linear equations defined on an \$n = k {\textbackslash}times k\$ square grid in \$O(n{\textbackslash}log n)\$ and space \$O(n{\textasciicircum}\{\{3 /2\}\} )\$ time. We generalize this method without degrading the time and space bounds so that it applies to any system of equations defined on a planar or almost-planar graph. Such systems arise in the solution of two-dimensional finite element problems. Our method uses the fact that planar graphs have good separators.More generally, we show that sparse Gaussian elimination is efficient for any class of graphs which have good separators, and conversely that graphs without good separators (including “almost all” sparse graphs) are not amenable to sparse Gaussian elimination.},
  number   = {2},
  urldate  = {2025-08-16},
  journal  = {SIAM Journal on Numerical Analysis},
  author   = {George, Alan},
  month    = apr,
  year     = {1973},
  note     = {Publisher: Society for Industrial and Applied Mathematics},
  pages    = {345--363},
  file     = {Full Text PDF:/home/ranjan/snap/zotero-snap/common/Zotero/storage/WDPYSJRZ/George - 1973 - Nested Dissection of a Regular Finite Element Mesh.pdf:application/pdf}
}


@article{merrill_scalable_nodate,
  title    = {Scalable {GPU} {Graph} {Traversal}},
  abstract = {Breadth-first search (BFS) is a core primitive for graph traversal and a basis for many higher-level graph analysis algorithms. It is also representative of a class of parallel computations whose memory accesses and work distribution are both irregular and data-dependent. Recent work has demonstrated the plausibility of GPU sparse graph traversal, but has tended to focus on asymptotically inefficient algorithms that perform poorly on graphs with non-trivial diameter.},
  language = {en},
  author   = {Merrill, Duane},
  file     = {PDF:/home/ranjan/snap/zotero-snap/common/Zotero/storage/QTE95T3H/Merrill - Scalable GPU Graph Traversal.pdf:application/pdf}
}

@misc{kaleta_kaletapbfs-cuda-gpu_2025,
  title    = {kaletap/bfs-cuda-gpu},
  url      = {https://github.com/kaletap/bfs-cuda-gpu},
  abstract = {Implementation of parallel Breadth First Algorithm for graph traversal using CUDA and C++ language.},
  urldate  = {2025-08-19},
  author   = {Kaleta, Przemysław},
  month    = may,
  year     = {2025},
  note     = {original-date: 2019-11-14T12:55:50Z}
}

@misc{chang2025parallelizingapproximateminimumdegree,
  title         = {Parallelizing the Approximate Minimum Degree Ordering Algorithm: Strategies and Evaluation},
  author        = {Yen-Hsiang Chang and Aydın Buluç and James Demmel},
  year          = {2025},
  eprint        = {2504.17097},
  archiveprefix = {arXiv},
  primaryclass  = {cs.DC},
  url           = {https://arxiv.org/abs/2504.17097}
}


@article{yannakakis_computing_1981,
  title    = {Computing the {Minimum} {Fill}-{In} is {NP}-{Complete}},
  volume   = {2},
  issn     = {0196-5212},
  url      = {https://epubs.siam.org/doi/10.1137/0602010},
  doi      = {10.1137/0602010},
  abstract = {We use the notion of potential maximal clique to characterize the maximal cliques appearing in minimal triangulations of a graph. We show that if these objects can be listed in polynomial time for a class of graphs, the treewidth and the minimum fill-in are polynomially tractable for these graphs. We prove that for all classes of graphs for which polynomial algorithms computing the treewidth and the minimum fill-in exist, we can list their potential maximal cliques in polynomial time. Our approach unifies these algorithms. Finally we show how to compute in polynomial time the potential maximal cliques of weakly triangulated graphs for which the treewidth and the minimum fill-in problems were open.},
  number   = {1},
  urldate  = {2025-09-09},
  journal  = {SIAM Journal on Algebraic Discrete Methods},
  author   = {Yannakakis, Mihalis},
  month    = mar,
  year     = {1981},
  note     = {Publisher: Society for Industrial and Applied Mathematics},
  pages    = {77--79},
  file     = {Full Text PDF:/home/ranjan/snap/zotero-snap/common/Zotero/storage/2BAJ996G/Yannakakis - 1981 - Computing the Minimum Fill-In is NP-Complete.pdf:application/pdf}
}


@article{catalyurek_hypergraph_2011,
  title    = {Hypergraph {Partitioning}-{Based} {Fill}-{Reducing} {Ordering} for {Symmetric} {Matrices}},
  volume   = {33},
  issn     = {1064-8275},
  url      = {https://epubs.siam.org/doi/10.1137/090757575},
  doi      = {10.1137/090757575},
  abstract = {We consider two-dimensional partitioning of general sparse matrices for parallel sparse matrix-vector multiply operation. We present three hypergraph-partitioning-based methods, each having unique advantages. The first one treats the nonzeros of the matrix individually and hence produces fine-grain partitions. The other two produce coarser partitions, where one of them imposes a limit on the number of messages sent and received by a single processor, and the other trades that limit for a lower communication volume. We also present a thorough experimental evaluation of the proposed two-dimensional partitioning methods together with the hypergraph-based one-dimensional partitioning methods, using an extensive set of public domain matrices. Furthermore, for the users of these partitioning methods, we present a partitioning recipe that chooses one of the partitioning methods according to some matrix characteristics.},
  number   = {4},
  urldate  = {2025-09-11},
  journal  = {SIAM Journal on Scientific Computing},
  author   = {\c{C}ataly\"urek, \"Umit V. and Aykanat, Cevdet and Kayaaslan, Enver},
  month    = jan,
  year     = {2011},
  note     = {Publisher: Society for Industrial and Applied Mathematics},
  keywords = {Google Scholar, OpenURL},
  pages    = {1996--2023},
  file     = {Full Text PDF:/home/ranjan/snap/zotero-snap/common/Zotero/storage/RJ8YYZG2/Çatalyürek et al. - 2011 - Hypergraph Partitioning-Based Fill-Reducing Ordering for Symmetric Matrices.pdf:application/pdf}
}


@inproceedings{dasgupta_alpha_2023,
  address    = {Berlin, Heidelberg},
  title      = {Alpha {Elimination}: {Using} {Deep} {Reinforcement} {Learning} to {Reduce} {Fill}-{In} {During} {Sparse} {Matrix} {Decomposition}},
  isbn       = {978-3-031-43420-4},
  shorttitle = {Alpha {Elimination}},
  url        = {https://doi.org/10.1007/978-3-031-43421-1_28},
  doi        = {10.1007/978-3-031-43421-1_28},
  abstract   = {A large number of computational and scientific methods commonly require decomposing a sparse matrix into triangular factors as LU decomposition. A common problem faced during this decomposition is that even though the given matrix may be very sparse, the decomposition may lead to a denser triangular factors due to fill-in. A significant fill-in may lead to prohibitively larger computational costs and memory requirement during decomposition as well as during the solve phase. To this end, several heuristic sparse matrix reordering methods have been proposed to reduce fill-in before the decomposition. However, finding an optimal reordering algorithm that leads to minimal fill-in during such decomposition is known to be a NP-hard problem. A reinforcement learning based approach is proposed for this problem. The sparse matrix reordering problem is formulated as a single player game. More specifically, Monte-Carlo tree search in combination with neural network is used as a decision making algorithm to search for the best move in our game. The proposed method, Alpha Elimination is found to produce significantly lesser non-zeros in the LU decomposition as compared to existing state-of-the-art heuristic algorithms with little to no increase in overall running time of the algorithm. The code for the project is publicly available ().},
  urldate    = {2025-09-11},
  booktitle  = {Machine {Learning} and {Knowledge} {Discovery} in {Databases}: {Research} {Track}: {European} {Conference}, {ECML} {PKDD} 2023, {Turin}, {Italy}, {September} 18–22, 2023, {Proceedings}, {Part} {IV}},
  publisher  = {Springer-Verlag},
  author     = {Dasgupta, Arpan and Kumar, Pawan},
  month      = sep,
  year       = {2023},
  pages      = {472--488}
}


@article{yuan_fast_nodate,
  title    = {Fast {Sparse} {Matrix} {Reordering} on {GPU} for {Cholesky} {Based} {Solvers}},
  language = {en},
  author   = {Yuan, Changcheng},
  file     = {PDF:/home/ranjan/snap/zotero-snap/common/Zotero/storage/RL7CGAKD/Yuan - Fast Sparse Matrix Reordering on GPU for Cholesky Based Solvers.pdf:application/pdf}
}


@article{gilbert_jet_2024,
  title      = {Jet: {Multilevel} {Graph} {Partitioning} on {Graphics} {Processing} {Units}},
  volume     = {46},
  issn       = {1064-8275},
  shorttitle = {Jet},
  url        = {https://epubs.siam.org/doi/10.1137/23M1559129},
  doi        = {10.1137/23M1559129},
  abstract   = {A new format for storing sparse matrices is proposed for efficient sparse matrix-vector (SpMV) product calculation on modern graphics processing units (GPUs). This format extends the standard compressed row storage (CRS) format and can be quickly converted to and from  it. Computational performance of two SpMV kernels for the new format is determined for over 130 sparse matrices on Fermi-class and Kepler-class GPUs and compared with that of five existing generic algorithms and industrial  implementations, including Nvidia cuSparse CSR and HYB kernels. We found the speedup of up to \${\textbackslash}approx 60{\textbackslash}\% \$ over the best of the five alternative kernels.},
  number     = {5},
  urldate    = {2025-09-29},
  journal    = {SIAM Journal on Scientific Computing},
  author     = {Gilbert, Michael S. and Madduri, Kamesh and Boman, Erik G. and Rajamanickam, Siva},
  month      = oct,
  year       = {2024},
  note       = {Publisher: Society for Industrial and Applied Mathematics},
  pages      = {B700--B724},
  file       = {Submitted Version:/home/ranjan/snap/zotero-snap/common/Zotero/storage/AUZZFUXJ/Gilbert et al. - 2024 - Jet Multilevel Graph Partitioning on Graphics Processing Units.pdf:application/pdf}
}


@incollection{selvitopi_effect_2020,
  address   = {Cham},
  title     = {The {Effect} of {Various} {Sparsity} {Structures} on {Parallelism} and {Algorithms} to {Reveal} {Those} {Structures}},
  isbn      = {978-3-030-43736-7},
  url       = {https://doi.org/10.1007/978-3-030-43736-7_2},
  abstract  = {Structured sparse matrices can greatly benefit parallel numerical methods in terms of parallel performance and convergence. In this chapter, we present combinatorial models for obtaining several different sparse matrix forms. There are four basic forms we focus on: singly-bordered block-diagonal form, doubly-bordered block-diagonal form, nonempty off-diagonal block minimization, and block diagonal with overlap form. For each of these forms, we first present the form in detail and describe what goals are sought within the form, and then examine the combinatorial models that attain the respective form while targeting the sought goals, and finally explain in which aspects the forms benefit certain parallel numerical methods and their relationship with the models. Our work focuses especially on graph and hypergraph partitioning models in obtaining the mentioned forms. Despite their relatively high preprocessing overhead compared to other heuristics, they have proven to model the given problem more accurately and this overhead can be often amortized due the fact that matrix structure does not change much during a typical numerical simulation. This chapter presents a number of models and their relationship with parallel numerical methods.},
  language  = {en},
  urldate   = {2025-09-18},
  booktitle = {Parallel {Algorithms} in {Computational} {Science} and {Engineering}},
  publisher = {Springer International Publishing},
  author    = {Selvitopi, Oguz and Acer, Seher and Manguoğlu, Murat and Aykanat, Cevdet},
  editor    = {Grama, Ananth and Sameh, Ahmed H.},
  year      = {2020},
  doi       = {10.1007/978-3-030-43736-7_2},
  pages     = {35--62},
  file      = {Full Text PDF:/home/ranjan/snap/zotero-snap/common/Zotero/storage/2C9CQ26I/Selvitopi et al. - 2020 - The Effect of Various Sparsity Structures on Parallelism and Algorithms to Reveal Those Structures.pdf:application/pdf}
}


@incollection{scott_introduction_2023,
  address   = {Cham},
  title     = {An {Introduction} to {Sparse} {Matrices}},
  isbn      = {978-3-031-25820-6},
  url       = {https://doi.org/10.1007/978-3-031-25820-6_1},
  abstract  = {Consider the simple matrix A on the left in Figure 1.1. Many of its entries are zero (and so are omitted). This is an example of a sparse matrix. The problem we are interested in is that of solving linear systems of equations Ax = b, where the square sparse matrix A and the vector b are given and the solution vector x is required. Such systems arise in a huge range of practical applications, including in areas as diverse as quantum chemistry, computer graphics, computational fluid dynamics, power networks, machine learning, and optimization. The list is endless and constantly growing, together with the sizes of the systems. For efficiency and to enable large systems to be solved, the sparsity of A must be exploited and operations with the zero entries avoided. To achieve this, sophisticated algorithms are required.},
  language  = {en},
  urldate   = {2025-10-03},
  booktitle = {Algorithms for {Sparse} {Linear} {Systems}},
  publisher = {Springer International Publishing},
  author    = {Scott, Jennifer and Tůma, Miroslav},
  editor    = {Scott, Jennifer and Tůma, Miroslav},
  year      = {2023},
  doi       = {10.1007/978-3-031-25820-6_1},
  pages     = {1--5},
  file      = {Full Text PDF:/home/ranjan/snap/zotero-snap/common/Zotero/storage/EURZECU4/Scott and Tůma - 2023 - An Introduction to Sparse Matrices.pdf:application/pdf}
}


@article{schaeffer_sparse_2013,
  title    = {Sparse dynamics for partial differential equations},
  volume   = {110},
  url      = {https://www.pnas.org/doi/10.1073/pnas.1302752110},
  doi      = {10.1073/pnas.1302752110},
  abstract = {We investigate the approximate dynamics of several differential equations when the solutions are restricted to a sparse subset of a given basis. The restriction is enforced at every time step by simply applying soft thresholding to the coefficients of the basis approximation. By reducing or compressing the information needed to represent the solution at every step, only the essential dynamics are represented. In many cases, there are natural bases derived from the differential equations, which promote sparsity. We find that our method successfully reduces the dynamics of convection equations, diffusion equations, weak shocks, and vorticity equations with high-frequency source terms.},
  number   = {17},
  urldate  = {2025-10-03},
  journal  = {Proceedings of the National Academy of Sciences},
  author   = {Schaeffer, Hayden and Caflisch, Russel and Hauck, Cory D. and Osher, Stanley},
  month    = apr,
  year     = {2013},
  note     = {Publisher: Proceedings of the National Academy of Sciences},
  pages    = {6634--6639},
  file     = {Full Text PDF:/home/ranjan/snap/zotero-snap/common/Zotero/storage/H5EWNTXC/Schaeffer et al. - 2013 - Sparse dynamics for partial differential equations.pdf:application/pdf}
}


@article{gilbert_analysis_1986,
  title    = {The analysis of a nested dissection algorithm},
  volume   = {50},
  issn     = {0945-3245},
  url      = {https://doi.org/10.1007/BF01396660},
  doi      = {10.1007/BF01396660},
  abstract = {Nested dissection is an algorithm invented by Alan George for preserving sparsity in Gaussian elimination on symmetric positive definite matrices. Nested dissection can be viewed as a recursive divide-and-conquer algorithm on an undirected graph; it usesseparators in the graph, which are small sets of vertices whose removal divides the graph approximately in half. George and Liu gave an implementation of nested dissection that used a heuristic to find separators. Lipton and Tarjan gave an algorithm to findn1/2-separators in planar graphs and two-dimensional finite element graphs, and Lipton, Rose, and Tarjan used these separators in a modified version of nested dissection, guaranteeing bounds ofO (n logn) on fill andO(n3/2) on operation count. We analyze the combination of the original George-Liu nested dissection algorithm and the Lipton-Tarjan planar separator algorithm. This combination is interesting because it is easier to implement than the Lipton-Rose-Tarjan version, especially in the framework of existïng sparse matrix software. Using some topological graph theory, we proveO(n logn) fill andO(n3/2) operation count bounds for planar graphs, twodimensional finite element graphs, graphs of bounded genus, and graphs of bounded degree withn1/2-separators. For planar and finite element graphs, the leading constant factor is smaller than that in the Lipton-Rose-Tarjan analysis. We also construct a class of graphs withn1/2-separators for which our algorithm does not achieve anO(n logn) bound on fill.},
  language = {en},
  number   = {4},
  urldate  = {2025-08-23},
  journal  = {Numerische Mathematik},
  author   = {Gilbert, John R. and Tarjan, Robert Endre},
  month    = jul,
  year     = {1986},
  keywords = {05C10, 65F05, 65F50, AMS(MOS), CR, G.1.3, G.2.2},
  pages    = {377--404},
  file     = {Full Text PDF:/home/ranjan/snap/zotero-snap/common/Zotero/storage/KK2EVT5M/Gilbert and Tarjan - 1986 - The analysis of a nested dissection algorithm.pdf:application/pdf}
}

@inproceedings{cuthill_reducing_1969,
  title     = {Reducing the Bandwidth of Sparse Symmetric Matrices},
  author    = {Cuthill, E. and McKee, J.},
  booktitle = {Proceedings of the 1969 24th National Conference},
  series    = {ACM '69},
  year      = {1969},
  pages     = {157--172},
  publisher = {ACM},
  address   = {New York, NY, USA},
  doi       = {10.1145/800195.805928}
}

@article{george_computer_1981,
  title     = {Computer Solution of Large Sparse Positive Definite Systems},
  author    = {George, Alan and Liu, Joseph W. H.},
  journal   = {Prentice-Hall Series in Computational Mathematics},
  publisher = {Prentice-Hall},
  year      = {1981},
  address   = {Englewood Cliffs, NJ}
}

@article{tinney_direct_1967,
  title   = {Direct Solutions of Sparse Network Equations by Optimally Ordered Triangular Factorization},
  author  = {Tinney, W. F. and Walker, J. W.},
  journal = {Proceedings of the IEEE},
  volume  = {55},
  number  = {11},
  year    = {1967},
  pages   = {1801--1809},
  doi     = {10.1109/PROC.1967.6011}
}

@article{liu_modification_1985,
  title   = {Modification of the Minimum-Degree Algorithm by Multiple Elimination},
  author  = {Liu, Joseph W. H.},
  journal = {ACM Transactions on Mathematical Software},
  volume  = {11},
  number  = {2},
  year    = {1985},
  pages   = {141--153},
  doi     = {10.1145/214392.214398}
}

@article{amestoy_approximate_1996,
  title   = {An Approximate Minimum Degree Ordering Algorithm},
  author  = {Amestoy, Patrick R. and Davis, Timothy A. and Duff, Iain S.},
  journal = {SIAM Journal on Matrix Analysis and Applications},
  volume  = {17},
  number  = {4},
  year    = {1996},
  pages   = {886--905},
  doi     = {10.1137/S0895479894278952}
}

@article{amestoy_algorithm_2004,
  title   = {Algorithm 837: {AMD}, an Approximate Minimum Degree Ordering Algorithm},
  author  = {Amestoy, Patrick R. and Davis, Timothy A. and Duff, Iain S.},
  journal = {ACM Transactions on Mathematical Software},
  volume  = {30},
  number  = {3},
  year    = {2004},
  month   = sep,
  pages   = {381--388},
  doi     = {10.1145/1024074.1024081}
}

@inproceedings{mtmetis2013ipdps,
  title        = {Multi-threaded graph partitioning},
  author       = {LaSalle, Dominique and Karypis, George},
  booktitle    = {Parallel \& Distributed Processing (IPDPS), 2013 IEEE 27th International Symposium on},
  pages        = {225--236},
  year         = {2013},
  organization = {IEEE}
}

@misc{davis_drtimothyaldendavissuitesparse_2025,
  title    = {{DrTimothyAldenDavis}/{SuiteSparse}},
  url      = {https://github.com/DrTimothyAldenDavis/SuiteSparse},
  abstract = {The official SuiteSparse library: a suite of sparse matrix algorithms authored or co-authored by Tim Davis, Texas A\&M University.},
  urldate  = {2025-10-04},
  author   = {Davis, Tim},
  month    = oct,
  year     = {2025},
  note     = {original-date: 2019-10-19T17:43:53Z},
  keywords = {c, cholmod, colamd, cpp, csparse, graph-algorithms, graphblas, klu, mathematics, matlab, sparse-matrix, spqr, suitesparse, umfpack}
}


@misc{noauthor_aldenmath_nodate,
  title    = {{AldenMath} – {Mathematical} software by {Tim} {Davis}.},
  url      = {https://aldenmath.com/},
  language = {en-US},
  urldate  = {2025-10-04},
  file     = {Snapshot:/home/ranjan/snap/zotero-snap/common/Zotero/storage/4MJ58IKH/aldenmath.com.html:text/html}
}


@article{papadimitriou_np-completeness_1976,
  title    = {The {NP}-{Completeness} of the bandwidth minimization problem},
  volume   = {16},
  issn     = {1436-5057},
  url      = {https://doi.org/10.1007/BF02280884},
  doi      = {10.1007/BF02280884},
  abstract = {The Problem of minimizing the bandwidth of the nonzero entries of a sparse symmetric matrix by permuting its rows and columns and some related combinatorial problems are shown to be NP-Complete.},
  language = {en},
  number   = {3},
  urldate  = {2025-10-05},
  journal  = {Computing},
  author   = {Papadimitriou, Ch. H.},
  month    = sep,
  year     = {1976},
  keywords = {Combinatorial Problem, Computational Mathematic, Minimization Problem, Nonzero Entry, Symmetric Matrix},
  pages    = {263--270},
  file     = {Full Text PDF:/home/ranjan/snap/zotero-snap/common/Zotero/storage/PPP28J4S/Papadimitriou - 1976 - The NP-Completeness of the bandwidth minimization problem.pdf:application/pdf}
}

@article{lim_heuristics_2006,
  title   = {Heuristics for matrix bandwidth reduction},
  author  = {Lim, A. and Rodrigues, B. and Xiao, F.},
  journal = {European Journal of Operational Research},
  volume  = {174},
  number  = {1},
  year    = {2006},
  pages   = {69--91},
  doi     = {10.1016/j.ejor.2005.03.004}
}

@phdthesis{DBLP:phd/dnb/Schlag20,
  author = {Sebastian Schlag},
  title  = {High-Quality Hypergraph Partitioning},
  school = {Karlsruhe Institute of Technology, Germany},
  year   = {2020}
}

@article{10.1145/3529090,
  author  = {Schlag, Sebastian and 
             Heuer, Tobias and 
             Gottesb\"{u}ren, Lars and 
             Akhremtsev, Yaroslav and 
             Schulz, Christian and 
             Sanders, Peter},
  title   = {High-Quality Hypergraph Partitioning},
  url     = {https://doi.org/10.1145/3529090},
  doi     = {10.1145/3529090},
  journal = {ACM J. Exp. Algorithmics},
  year    = {2022},
  month   = {mar}
}

@inproceedings{ahss2017alenex,
  author    = {Yaroslav Akhremtsev and
               Tobias Heuer and
               Peter Sanders and
               Sebastian Schlag},
  title     = {Engineering a direct \emph{k}-way Hypergraph Partitioning Algorithm},
  booktitle = {19th Workshop on Algorithm Engineering and Experiments, (ALENEX 2017)},
  pages     = {28--42},
  year      = {2017}
}